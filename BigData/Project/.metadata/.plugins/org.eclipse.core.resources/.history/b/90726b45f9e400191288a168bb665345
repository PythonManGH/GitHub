package com.hadoop.mapReduce.flow;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class FlowDriver {
	public static void main(String[] args) throws IOException, Exception, InterruptedException{
		
		// 1. 获取 job
		Configuration configuration = new Configuration();
		Job job = Job.getInstance(configuration);
		
		// 2. 获取jar包存储路径
		job.setJarByClass(FlowDriver.class);
		
		// 3. 设置 mapper和reducer的class类
		job.setMapperClass(FlowMapper.class);
		job.setReducerClass(FlowReducer.class);
		
		// 4. 设置map输出阶段的key和value类型
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(FlowBean.class);
		
		// 5. 设置最后输出数据的key和value类型
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(FlowBean.class);
		
		// 6. 分区
		job.setPartitionerClass(FlowPartitioner.class);
		
		// 7. 设置输入数据的路径和输出数据的路径
		FileInputFormat.setInputPaths(job,new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		// 8. 提交
		boolean result = job.waitForCompletion(true);
		System.exit(result?0:1);
	}
}
