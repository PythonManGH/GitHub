嵌入式c笔试 - imlz的日志 - 网易博客   单日志页面显示设置 关闭 网易首页 网易博客 
    博客首页
     博客拍拍
     精美风格
     博客圈子
     博客活动
     娱乐中心
     找 朋 友
     博客复制
     手机博客
     短信写博
     意见反馈
     更多>>
      搜 索登录| 注册  烂车库存技术笔记  首页 日志 相册 音乐 收藏 博友 关于我              
很抱歉，因为您在网易相册发布了违规信息，账号被屏蔽。被屏蔽期间他人无法访问您的相册。
去帮助中心，了解如何重新恢复服务。  日志  码元、波特率、比特率、电平、频道带宽等概念的理解 cygwin 使用心得 嵌入式c笔试
软 C python   2008-12-02 09:13   阅读381   评论0   字号： 大大  中中  小小 很不错的东东, 
曾经在一次笔试中见过其中的几道题
C语言测试是招聘嵌入式系统程序员过程中必须而且有效的方法。这些年，我既参加也组
织了许多这种测试，在这过程中我意识到这些测试能为带面试者和被面试者提供许多有用
信息，此外，撇开面试的压力不谈，这种测试也是相当有趣的。
从被面试者的角度来讲，你能了解许多关于出题者或监考者的情况。这个测试只是出题者
为显示其对ANSI标准细节的知识而不是技术技巧而设计吗？这个愚蠢的问题吗？如要你答
出某个字符的ASCII值。这些问题着重考察你的系统调用和内存分配策略方面的能力吗？
这标志着出题者也许花时间在微机上而不上在嵌入式系统上。如果上述任何问题的答案是
“是”的话，那么我知道我得认真考虑我是否应该去做这份工作。
从面试者的角度来讲，一个测试也许能从多方面揭示应试者的素质：最基本的，你能了解
应试者C语言的水平。不管怎么样，看一下这人如何回答他不会的问题也是满有趣。应试
者是以好的直觉做出明智的选择，还是只是瞎蒙呢？当应试者在某个问题上卡住时是找借
口呢，还是表现出对问题的真正的好奇心，把这看成学习的机会呢？我发现这些信息与他
们的测试成绩一样有用。
有了这些想法，我决定出一些真正针对嵌入式系统的考题，希望这些令人头痛的考题能给
正在找工作的人一点帮住。这些问题都是我这些年实际碰到的。其中有些题很难，但它们
应该都能给你一点启迪。
这个测试适于不同水平的应试者，大多数初级水平的应试者的成绩会很差，经验丰富的程
序员应该有很好的成绩。为了让你能自己决定某些问题的偏好，每个问题没有分配分数，
如果选择这些考题为你所用，请自行按你的意思分配分数。
预处理器（Preprocessor）
1 . 用预处理指令#define 声明一个常数，用以表明1年中有多少秒（忽略闰年问题）
#define SECONDS_PER_YEAR (60 * 60 * 24 * 365)UL
我在这想看到几件事情：
?; #define 语法的基本知识（例如：不能以分号结束，括号的使用，等等）
?; 懂得预处理器将为你计算常数表达式的值，因此，直接写出你是如何计算一年
中有多少秒而不是计算出实际的值，是更清晰而没有代价的。
?; 意识到这个表达式将使一个16位机的整型数溢出-因此要用到长整型符号L,告诉
编译器这个常数是的长整型数。
?; 如果你在你的表达式中用到UL（表示无符号长整型），那么你有了一个好的起
点。记住，第一印象很重要。
2 . 写一个“标准”宏MIN ，这个宏输入两个参数并返回较小的一个。
#define MIN(A,B) （（A） <= (B) ? (A) : (B)) 
这个测试是为下面的目的而设的：
?; 标识#define在宏中应用的基本知识。这是很重要的，因为直到嵌入(inline)操
作符变为标准C的一部分，宏是方便产生嵌入代码的唯一方法，对于嵌入式系统来说，为
了能达到要求的性能，嵌入代码经常是必须的方法。
?; 三重条件操作符的知识。这个操作符存在C语言中的原因是它使得编译器能产生
比if-then-else更优化的代码，了解这个用法是很重要的。
?; 懂得在宏中小心地把参数用括号括起来
?; 我也用这个问题开始讨论宏的副作用，例如：当你写下面的代码时会发生什么
事？
least = MIN(*p++, b);
3. 预处理器标识#error的目的是什么？
如果你不知道答案，请看参考文献1。这问题对区分一个正常的伙计和一个书呆子是很有
用的。只有书呆子才会读C语言课本的附录去找出象这种问题的答案。当然如果你不是在
找一个书呆子，那么应试者最好希望自己不要知道答案。
死循环（Infinite loops）
4. 嵌入式系统中经常要用到无限循环，你怎么样用C编写死循环呢？
这个问题用几个解决方案。我首选的方案是：
while(1)
{
?}
一些程序员更喜欢如下方案：
for(;;)
{
?}
这个实现方式让我为难，因为这个语法没有确切表达到底怎么回事。如果一个应试者给出
这个作为方案，我将用这个作为一个机会去探究他们这样做的基本原理。如果他们的基本
答案是：“我被教着这样做，但从没有想到过为什么。”这会给我留下一个坏印象。
第三个方案是用 goto
Loop:
...
goto Loop;
应试者如给出上面的方案，这说明或者他是一个汇编语言程序员（这也许是好事）或者他
是一个想进入新领域的BASIC/FORTRAN程序员。
数据声明（Data declarations） 
5. 用变量a给出下面的定义
a) 一个整型数（An integer） 
b)一个指向整型数的指针（ A pointer to an integer） 
c)一个指向指针的的指针，它指向的指针是指向一个整型数（ A pointer to a pointer
to an intege）r 
d)一个有10个整型数的数组（ An array of 10 integers） 
e) 一个有10个指针的数组，该指针是指向一个整型数的。（An array of 10 pointers 
to integers） 
f) 一个指向有10个整型数数组的指针（ A pointer to an array of 10 integers） 
g) 一个指向函数的指针，该函数有一个整型参数并返回一个整型数（A pointer to a f
unction that takes an integer as an argument and returns an integer） 
h)一个有10个指针的数组，该指针指向一个函数，该函数有一个整型参数并返回一个整型
数（ An array of ten pointers to functions that take an integer argument and 
return an integer ）
答案是： 
a) int a; // An integer 
b) int *a; // A pointer to an integer 
c) int **a; // A pointer to a pointer to an integer 
d) int a[10]; // An array of 10 integers 
e) int *a[10]; // An array of 10 pointers to integers 
f) int (*a)[10]; // A pointer to an array of 10 integers 
g) int (*a)(int); // A pointer to a function a that takes an integer argument
and returns an integer 
h) int (*a[10])(int); // An array of 10 pointers to functions that take an in
teger argument and return an integer 
人们经常声称这里有几个问题是那种要翻一下书才能回答的问题，我同意这种说法。当我
写这篇文章时，为了确定语法的正确性，我的确查了一下书。但是当我被面试的时候，我
期望被问到这个问题（或者相近的问题）。因为在被面试的这段时间里，我确定我知道这
个问题的答案。应试者如果不知道所有的答案（或至少大部分答案），那么也就没有为这
次面试做准备，如果该面试者没有为这次面试做准备，那么他又能为什么出准备呢？
Static 
6. 关键字static的作用是什么？
这个简单的问题很少有人能回答完全。在C语言中，关键字static有三个明显的作用：
?; 在函数体，一个被声明为静态的变量在这一函数被调用过程中维持其值不变。
?; 在模块内（但在函数体外），一个被声明为静态的变量可以被模块内所用函数
访问，但不能被模块外其它函数访问。它是一个本地的全局变量。
?; 在模块内，一个被声明为静态的函数只可被这一模块内的其它函数调用。那就
是，这个函数被限制在声明它的模块的本地范围内使用。
大多数应试者能正确回答第一部分，一部分能正确回答第二部分，同是很少的人能懂得第
三部分。这是一个应试者的严重的缺点，因为他显然不懂得本地化数据和代码范围的好处
和重要性。
Const 
7．关键字const有什么含意？
我只要一听到被面试者说：“const意味着常数”，我就知道我正在和一个业余者打交道
。去年Dan Saks已经在他的文章里完全概括了const的所有用法，因此ESP(译者：Embedd
ed Systems Programming)的每一位读者应该非常熟悉const能做什么和不能做什么.如果
你从没有读到那篇文章，只要能说出const意味着“只读”就可以了。尽管这个答案不是
完全的答案，但我接受它作为一个正确的答案。（如果你想知道更详细的答案，仔细读一
下Saks的文章吧。）
如果应试者能正确回答这个问题，我将问他一个附加的问题：
下面的声明都是什么意思？
const int a;
int const a;
const int *a;
int * const a;
int const * a const;
/******/ 前两个的作用是一样，a是一个常整型数。第三个意味着a是一个指向常整型数的指针（也
就是，整型数是不可修改的，但指针可以）。第四个意思a是一个指向整型数的常指针（
也就是说，指针指向的整型数是可以修改的，但指针是不可修改的）。最后一个意味着a
是一个指向常整型数的常指针（也就是说，指针指向的整型数是不可修改的，同时指针也
是不可修改的）。如果应试者能正确回答这些问题，那么他就给我留下了一个好印象。顺
带提一句，也许你可能会问，即使不用关键字const，也还是能很容易写出功能正确的程
序，那么我为什么还要如此看重关键字const呢？我也如下的几下理由：
?; 关键字const的作用是为给读你代码的人传达非常有用的信息，实际上，声明一
个参数为常量是为了告诉了用户这个参数的应用目的。如果你曾花很多时间清理其它人留
下的垃圾，你就会很快学会感谢这点多余的信息。（当然，懂得用const的程序员很少会
留下的垃圾让别人来清理的。）
?; 通过给优化器一些附加的信息，使用关键字const也许能产生更紧凑的代码。
?; 合理地使用关键字const可以使编译器很自然地保护那些不希望被改变的参数，
防止其被无意的代码修改。简而言之，这样可以减少bug的出现。
Volatile 
8. 关键字volatile有什么含意?并给出三个不同的例子。
一个定义为volatile的变量是说这变量可能会被意想不到地改变，这样，编译器就不会去
假设这个变量的值了。精确地说就是，优化器在用到这个变量时必须每次都小心地重新读
取这个变量的值，而不是使用保存在寄存器里的备份。下面是volatile变量的几个例子：
?; 并行设备的硬件寄存器（如：状态寄存器）
?; 一个中断服务子程序中会访问到的非自动变量(Non-automatic variables)
?; 多线程应用中被几个任务共享的变量
回答不出这个问题的人是不会被雇佣的。我认为这是区分C程序员和嵌入式系统程序员的
最基本的问题。搞嵌入式的家伙们经常同硬件、中断、RTOS等等打交道，所有这些都要求
用到volatile变量。不懂得volatile的内容将会带来灾难。
假设被面试者正确地回答了这是问题（嗯，怀疑是否会是这样），我将稍微深究一下，看
一下这家伙是不是直正懂得volatile完全的重要性。
?; 一个参数既可以是const还可以是volatile吗？解释为什么。
?; 一个指针可以是volatile 吗？解释为什么。
?; 下面的函数有什么错误：
int square(volatile int *ptr)
{
return *ptr * *ptr;
}
下面是答案：
?; 是的。一个例子是只读的状态寄存器。它是volatile因为它可能被意想不到地
改变。它是const因为程序不应该试图去修改它。
?; 是的。尽管这并不很常见。一个例子是当一个中服务子程序修该一个指向一个
buffer的指针时。
?; 这段代码有点变态。这段代码的目的是用来返指针*ptr指向值的平方，但是，
由于*ptr指向一个volatile型参数，编译器将产生类似下面的代码：
int square(volatile int *ptr) 
{
int a,b;
a = *ptr;
b = *ptr;
return a * b;
}
由于*ptr的值可能被意想不到地该变，因此a和b可能是不同的。结果，这段代码可能返不
是你所期望的平方值！正确的代码如下：
long square(volatile int *ptr) 
{
int a;
a = *ptr;
return a * a;
}
位操作（Bit manipulation） 
9. 嵌入式系统总是要用户对变量或寄存器进行位操作。给定一个整型变量a，写两段代码
，第一个设置a的bit 3，第二个清除a 的bit 3。在以上两个操作中，要保持其它位不变
。
对这个问题有三种基本的反应
?; 不知道如何下手。该被面者从没做过任何嵌入式系统的工作。
?; 用bit fields。Bit fields是被扔到C语言死角的东西，它保证你的代码在不同
编译器之间是不可移植的，同时也保证了的你的代码是不可重用的。我最近不幸看到Inf
ineon为其较复杂的通信芯片写的驱动程序，它用到了bit fields因此完全对我无用，因
为我的编译器用其它的方式来实现bit fields的。从道德讲：永远不要让一个非嵌入式的
家伙粘实际硬件的边。
?; 用 #defines 和 bit masks 操作。这是一个有极高可移植性的方法，是应该被
用到的方法。最佳的解决方案如下：
#define BIT3 (0x1 << 3)
static int a;
void set_bit3(void) {
a |= BIT3;
}
void clear_bit3(void) {
a &= ~BIT3;
}
一些人喜欢为设置和清除值而定义一个掩码同时定义一些说明常数，这也是可以接受的。
我希望看到几个要点：说明常数、|=和&=~操作。
访问固定的内存位置（Accessing fixed memory locations） 
10. 嵌入式系统经常具有要求程序员去访问某特定的内存位置的特点。在某工程中，要求
设置一绝对地址为0x67a9的整型变量的值为0xaa66。编译器是一个纯粹的ANSI编译器。写
代码去完成这一任务。
这一问题测试你是否知道为了访问一绝对地址把一个整型数强制转换（typecast）为一指
针是合法的。这一问题的实现方式随着个人风格不同而不同。典型的类似代码如下：
int *ptr;
ptr = (int *)0x67a9;
*ptr = 0xaa55;
A more obscure approach is: 
一个较晦涩的方法是：
*(int * const)(0x67a9) = 0xaa55;
即使你的品味更接近第二种方案，但我建议你在面试时使用第一种方案。
中断（Interrupts） 
11. 中断是嵌入式系统中重要的组成部分，这导致了很多编译开发商提供一种扩展―让标
准C支持中断。具代表事实是，产生了一个新的关键字__interrupt。下面的代码就使用了
__interrupt关键字去定义了一个中断服务子程序(ISR)，请评论一下这段代码的。
__interrupt double compute_area (double radius) 
{
double area = PI * radius * radius;
printf("\nArea = %f", area);
return area;
}
这个函数有太多的错误了，以至让人不知从何说起了：
?; ISR 不能返回一个值。如果你不懂这个，那么你不会被雇用的。
?; ISR 不能传递参数。如果你没有看到这一点，你被雇用的机会等同第一项。
?; 在许多的处理器/编译器中，浮点一般都是不可重入的。有些处理器/编译器需
要让额处的寄存器入栈，有些处理器/编译器就是不允许在ISR中做浮点运算。此外，ISR
应该是短而有效率的，在ISR中做浮点运算是不明智的。
?; 与第三点一脉相承，printf()经常有重入和性能上的问题。如果你丢掉了第三
和第四点，我不会太为难你的。不用说，如果你能得到后两点，那么你的被雇用前景越来
越光明了。
*****
代码例子（Code examples）
12 . 下面的代码输出是什么，为什么？
void foo(void)
{
unsigned int a = 6;
int b = -20;
(a+b > 6) ? puts("> 6") : puts("<= 6");
}
这个问题测试你是否懂得C语言中的整数自动转换原则，我发现有些开发者懂得极少这些
东西。不管如何，这无符号整型问题的答案是输出是 ”>6”。原因是当表达式中存在有
符号类型和无符号类型时所有的操作数都自动转换为无符号类型。 因此-20变成了一个非
常大的正整数，所以该表达式计算出的结果大于6。这一点对于应当频繁用到无符号数据
类型的嵌入式系统来说是丰常重要的。如果你答错了这个问题，你也就到了得不到这份工
作的边缘。
13. 评价下面的代码片断：
unsigned int zero = 0;
unsigned int compzero = 0xFFFF; 
/*1's complement of zero */ 
对于一个int型不是16位的处理器为说，上面的代码是不正确的。应编写如下：
unsigned int compzero = ~0;
这一问题真正能揭露出应试者是否懂得处理器字长的重要性。在我的经验里，好的嵌入式
程序员非常准确地明白硬件的细节和它的局限，然而PC机程序往往把硬件作为一个无法避
免的烦恼。
到了这个阶段，应试者或者完全垂头丧气了或者信心满满志在必得。如果显然应试者不是
很好，那么这个测试就在这里结束了。但如果显然应试者做得不错，那么我就扔出下面的
追加问题，这些问题是比较难的，我想仅仅非常优秀的应试者能做得不错。提出这些问题
，我希望更多看到应试者应付问题的方法，而不是答案。不管如何，你就当是这个娱乐吧
…
动态内存分配（Dynamic memory allocation） 
14. 尽管不像非嵌入式计算机那么常见，嵌入式系统还是有从堆（heap）中动态分配内存
的过程的。那么嵌入式系统中，动态分配内存可能发生的问题是什么？
这里，我期望应试者能提到内存碎片，碎片收集的问题，变量的持行时间等等。这个主题
已经在ESP杂志中被广泛地讨论过了（主要是 P.J. Plauger, 他的解释远远超过我这里能
提到的任何解释），所有回过头看一下这些杂志吧！让应试者进入一种虚假的安全感觉后
，我拿出这么一个小节目：
下面的代码片段的输出是什么，为什么？
char *ptr;
if ((ptr = (char *)malloc(0)) == 
NULL) 
else
puts("Got a null pointer");
puts("Got a valid pointer");
这是一个有趣的问题。最近在我的一个同事不经意把0值传给了函数malloc，得到了一个
合法的指针之后，我才想到这个问题。这就是上面的代码，该代码的输出是“Got a val
id pointer”。我用这个来开始讨论这样的一问题，看看被面试者是否想到库例程这样做
是正确。得到正确的答案固然重要，但解决问题的方法和你做决定的基本原理更重要些。
Typedef 
: 
15 Typedef 在C语言中频繁用以声明一个已经存在的数据类型的同义字。也可以用预处理
器做类似的事。例如，思考一下下面的例子：
#define dPS struct s *
typedef struct s * tPS;
以上两种情况的意图都是要定义dPS 和 tPS 作为一个指向结构s指针。哪种方法更好呢？
（如果有的话）为什么？
这是一个非常微妙的问题，任何人答对这个问题（正当的原因）是应当被恭喜的。答案是
：typedef更好。思考下面的例子：
dPS p1,p2;
tPS p3,p4;
第一个扩展为
struct s * p1, p2;
.
上面的代码定义p1为一个指向结构的指，p2为一个实际的结构，这也许不是你想要的。第
二个例子正确地定义了p3 和p4 两个指针。
晦涩的语法
16 . C语言同意一些令人震惊的结构,下面的结构是合法的吗，如果是它做些什么？
int a = 5, b = 7, c;
c = a+++b;
这个问题将做为这个测验的一个愉快的结尾。不管你相不相信，上面的例子是完全合乎语
法的。问题是编译器如何处理它？水平不高的编译作者实际上会争论这个问题，根据最处
理原则，编译器应当能处理尽可能所有合法的用法。因此，上面的代码被处理成：
c = a++ + b;
因此, 这段代码持行后a = 6, b = 7, c = 12。
如果你知道答案，或猜出正确答案，做得好。如果你不知道答案，我也不把这个当作问题
。我发现这个问题的最大好处是这是一个关于代码编写风格，代码的可读性，代码的可修
改性的好的话题。
好了，伙计们，你现在已经做完所有的测试了。这就是我出的C语言测试题，我怀着愉快
的心情写完它，希望你以同样的心情读完它。如果是认为这是一个好的测试，那么尽量都
用到你的找工作的过程中去吧。天知道也许过个一两年，我就不做现在的工作，也需要找
一个。
Nigel Jones 是一个顾问，现在住在Maryland，当他不在水下时，你能在多个范围的嵌入
项目中找到他。 他很高兴能收到读者的来信，他的email地址是: NAJones@compuserve.
com 。
References 
?; Jones, Nigel, "In Praise of the #error directive," Embedded Systems 
Programming, September 1999, p. 114. 
?; Jones, Nigel, " Efficient C Code for Eight-bit MCUs ," Embedded Syst
ems Programming, November 1998, p. 66.引用(0) 推荐(0) 评论(0)阅读(381)   上一篇：cygwin 使用心得 

 
下一篇：码元、波特率、比特率、电平、频道带宽等概念的理解  最近读者 
登录后，您可以在此留下足迹。 浩淼雾隐 lovingpigs@126 lijiang_qin finchzhang l.candry terence2003 
带头大哥 w_flin@126
评论点击登录 |昵称：        
  验证码: 最新日志
  zz：数据结构之排序参数列表中的self：显式不等于冗余收藏zz:Python的网络编程访问我的blog的朋友们，有没有做gnuradio的？OFDM技术的基本原理python 
  查看函数调用者        公司简介- 联系方法- 招聘信息- 客户服务- 相关法律- 互动营销-   网易公司版权所有 &copy;1997-2009 
JSWindow 正在加载中... {if coms != null && coms.length != 0}    <div id="comShowHeader_${parentId}" class="g_h_20 g_c_mgin nt-message">    <ul class="g_menu_09 g_w_at com_page">     <li>       {if (coms != null) && (comCount > (commentRange * pageNum))}         <a id="spnNextPage_${parentId}" class="g_c_noul c06" href="#" onclick="${containerObjName}.moveToPage(${pageNum} + 1, true);return false;">下页</a>       {else}<span class="c09">下页</span>{/if}     </li>     <li><span class="ckck c07">${pageNum}/${totalPageNum}</span></li>     <li>       {if pageNum > 1}         <a id="spnPrevPage_${parentId}" class="g_c_noul c06" href="#" onclick="${containerObjName}.moveToPage(${pageNum} - 1, true);return false;">上页</a>       {else}<span class="c09">上页</span>{/if}     </li>    </ul>  </div>  <div class="cmt-wrap nt-message">  {for com in coms}  <div class="cmt-dtl brd01">   <div class="user-img">   {if com.publisherName != null && com.publisherName != ""}    {if com.rtype != null && com.rtype == 0}     <a href="http://photo.163.com/photo/${com.publisherName}" target="_blank">      <img title="" alt="头像" id="imgPubPic_${com.id}" class="img50" src="${com.publisherAvatar}" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"/>     </a>    {else}     <a href="http://${com.publisherName|parentDomain}${prefix}/" target="_blank">      <img title="" alt="头像" id="imgPubPic_${com.id}" class="img50" src="http://os.blog.163.com/common/ava.s?host=${com.publisherName|escape}&b=0&t=660" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"/>     </a>    {/if}   {else}    <img class="img50" id="imgPubPic_${com.id}" src="${Const.STDomain}/style/common/comment/n50.jpg" onerror="this.src='http://b.bst.126.net/style/common/comment/n50.jpg'" title="${com.ipName|default:""}{if UD.hostId==UD.visitorId}&nbsp;${com.ip|default:""}{/if}"/>   {/if}   </div>   <div class="cmt-main">          <div class="author">          {if com.publisherName != null && com.publisherName != ""}           <a id="aComPubName_${com.id}" class="c05"            {if com.rtype != null && com.rtype == 0}       href="http://photo.163.com/photo/${com.publisherName}"            {else}              href="http://${com.publisherName|parentDomain}${prefix}/"            {/if}           title="${com.publisherNickname|escape}" target="_blank">     {if com.publisherId == hostId}<span class="n_ m9com" title="博主">&nbsp;</span>{/if}${com.publisherNickname|escape}</a>          {else}           <span class="c09">${com.publisherNickname|escape}</span>          {/if}          </div>          <span id="comContent${com.id}" class="g_t_wrap">${com.content}</span>          {if noCommentRight == false || (supportDeleteComment && visitorId == hostId)}          <div class="act" id="act_${com.id}">           {if noCommentRight == false}            {if com.publisherName != null && com.publisherName != ""}          <a id="comReply_${com.id}" class="c05" onclick="${containerObjName}.reply('${com.id}',true,'${com.publisherNickname|escape|js_string}','${com.publisherName|parentDomain}${prefix}','${com.publisherId}', '${com.publisherName|escape|js_string}','-1');return false;" href="#">回复</a>         {else}          <a id="comReply_${com.id}" class="c05" onclick="${containerObjName}.reply('${com.id}',false,'${com.publisherNickname|escape|js_string}','${com.ipName}', '', '','-1');return false;" href="#">回复</a>         {/if}           {/if}           {if noCommentRight == false && supportDeleteComment == true && visitorId == hostId}            <span class="sep bd1c">|</span>           {/if}           {if supportDeleteComment == true && visitorId == hostId}            <a id="delcomm_${com.id}" onclick="${containerObjName}.deleteComment('${com.id}',true);return false;" class="c05" href="#">删除</a>           {/if}          </div>          {/if}          <div id="bcomReplyDiv_${com.id}" style="display:none;" class="cmt-outerbox fs0"></div>      </div>   <div class="t c09"><span class="sep">${NetEase.DateTime.formatRecentDate(com.publishTime,"yyyy-MM-dd HH:mm")}</span></div>   {if com.subComments!=null && com.subComments.length!=0}    {for scom in com.subComments}     <div class="cmt-re brd01">           <div class="user-img">            {if scom.publisherName != null && scom.publisherName != ""}       {if scom.rtype != null && scom.rtype == 0}        <a href="http://photo.163.com/photo/${scom.publisherName}" target="_blank">         <img title="" alt="头像" id="imgPubPic_${scom.id}" class="img40" src="${scom.publisherAvatar}" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"/>        </a>       {else}        <a href="http://${scom.publisherName|parentDomain}${prefix}/" target="_blank">         <img title="" alt="头像" id="imgPubPic_${scom.id}" class="img40" src="http://os.blog.163.com/common/ava.s?host=${scom.publisherName|escape}&b=0&t=660" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"/>        </a>       {/if}      {else}       <img title="${scom.ipName|default:""}{if UD.hostId==UD.visitorId}&nbsp;${scom.ip|default:""}{/if}" id="imgPubPic_${scom.id}" class="img40" src="${Const.STDomain}/style/common/comment/n40.jpg" onerror="this.src='http://b.bst.126.net/style/common/comment/n40.jpg'"/>      {/if}     </div>           <div class="cmt-main">             <div class="author">              {if scom.publisherName != null && scom.publisherName != ""}               <a id="aComPubName_${scom.id}" title="${scom.publisherNickname|escape}" class="c05" href="http://${scom.publisherName|parentDomain}${prefix}/" target="_blank">{if scom.publisherId == hostId}<span class="n_ m9com" title="博主">&nbsp;</span>{/if}${scom.publisherNickname|escape}</a>              {else}               <span class="c09">${scom.publisherNickname|escape}</span>              {/if}              {if scom.replyComId != scom.mainComId}              <span class="c09"> 回复 </span>               {if scom.replyToUserName != null && scom.replyToUserName != ""}                <a id="aComPubName_${scom.id}_to_${scom.replyComId}" title="${scom.replyToUserNick|escape}" class="c05" href="http://${scom.replyToUserName|parentDomain}${prefix}/" target="_blank">{if scom.replyToUserName == UD.hostName}<span class="n_ m9com" title="博主">&nbsp;</span>{/if}${scom.replyToUserNick|escape}</a>               {else}                <span class="c09">${scom.replyToUserNick|escape}</span>               {/if}              {/if}             </div>             <span id="comContent${scom.id}" class="g_t_wrap">${scom.content}</span>             {if noCommentRight == false || (supportDeleteComment && visitorId == hostId)}             <div class="act" id="act_${scom.id}">               {if noCommentRight == false}              {if scom.publisherName != null && scom.publisherName != ""}            <a id="comReply_${scom.id}" class="c05" onclick="${containerObjName}.reply('${scom.id}',true,'${scom.publisherNickname|escape|js_string}','${scom.publisherName|parentDomain}${prefix}','${scom.publisherId}', '${scom.publisherName|escape|js_string}','${scom.mainComId}');return false;" href="#">回复</a>           {else}            <a id="comReply_${scom.id}" class="c05" onclick="${containerObjName}.reply('${scom.id}',false,'${scom.publisherNickname|escape|js_string}','${scom.ipName}', '', '','${scom.mainComId}');return false;" href="#">回复</a>           {/if}             {/if}             {if noCommentRight == false && supportDeleteComment == true && visitorId == hostId}              <span class="sep bd1c">|</span>             {/if}             {if supportDeleteComment == true && visitorId == hostId}              <a id="delcomm_${scom.id}" onclick="${containerObjName}.deleteComment('${scom.id}',false);return false;" class="c05" href="#">删除</a>             {/if}             </div>             {/if}             <div id="bcomReplyDiv_${scom.id}" style="display:none;" class="cmt-outerbox fs0"></div>           </div>           <div class="t c09"><span class="sep">${NetEase.DateTime.formatRecentDate(scom.publishTime,"yyyy-MM-dd HH:mm")}</span></div>         </div>    {/for}   {else}   {/if}  </div>  {/for}  </div>  <div id="comShowHeader_${parentId}_end" class="g_h_20 g_c_mgin">    <ul class="g_menu_09 g_w_at com_page">     <li>       {if (coms != null) && (comCount > (commentRange * pageNum))}         <a id="spnNextPage_${parentId}_end" class="g_c_noul c06" href="#" onclick="${containerObjName}.moveToPage(${pageNum} + 1, true);return false;">下页</a>       {else}<span class="c09">下页</span>{/if}     </li>     <li><span class="ckck c07">${pageNum}/${totalPageNum}</span></li>     <li>       {if pageNum > 1}         <a id="spnPrevPage_${parentId}_end" class="g_c_noul c06" href="#" onclick="${containerObjName}.moveToPage(${pageNum} - 1, true);return false;">上页</a>       {else}<span class="c09">上页</span>{/if}     </li>    </ul>  </div> {else} {/if}    {if (noCommentRight == true)}     <div class="loginsection">   {if allowComment == 0}    <span class="n_ n21">&nbsp;</span>登录后你可以发表评论，请先登录。&nbsp;&nbsp;&nbsp;</span><a href="#" onclick="showLoginDlg(DomainMap.serverHostName);return false;">登录&gt;&gt;</a>   {elseif allowComment == 100}    {if visitorRank==-100}     <span class="n_ n21">&nbsp;</span>登录并添加博主为博友、通过对方确认后可以发表评论，请先登录。&nbsp;&nbsp;&nbsp;<a href="#" onclick="showLoginDlg(DomainMap.serverHostName);return false;">登录&gt;&gt;</a>    {elseif visitorRank ==0}     <span class="n_ n21">&nbsp;</span>添加博主为博友、通过对方确认后可以发表评论，请先加为博友。&nbsp;&nbsp;&nbsp;<a id="AComment${parentId}" href="#" onclick="pageTopBar.showAddFriend();return false;">加为博友&gt;&gt;</a>    {/if}   {elseif allowComment == 10000}    <span class="n_ n21">&nbsp;</span>该内容仅供欣赏。   {/if}     </div>   {else}    <div class="cmt-box2 brd01 nt-message" style="border-bottom-width:1px;border-bottom-style:dashed;">      {if visitorRank <= -100}       <div class="g_layout_05 g_h_25 g_t_left" style="margin-bottom:7px;">      <a class="c05"  href="#" onclick="showLoginDlg(DomainMap.serverHostName);return false;">点击登录</a>        <span class="sep c09">|</span>昵称：<input type="text" id="username${parentId}" style="width:170px;" class="bd01 g_t_disable nvb g_c_input" name="username${parentId}" value="" maxlength="18"/>&nbsp;&nbsp;&nbsp;&nbsp;        </div>      {else}     <div class="user-img fl g_c_smvdn">     <input type="hidden" id="username${parentId}" name="username${parentId}" value="${userName}"/>     {if visitorAvatarDefault == true}          <img class="img50" title="${userName}" src="${formatImageUrl(defaultVisitorAvatarUrl)}" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"  alt="显示头像">         {else}          <img class="img50" title="${userName}" src="${formatImageUrl(visitorAvatar)}" onerror="this.src='http://b.bst.126.net/style/common/stranger.gif'"  alt="头像">     {/if}     <span class="g_t_hide" style="width:50px;display:block;" title="${userName}">${userName}</span>     </div>      {/if}     <div class="fl" style="width:495px;{if visitorRank > -100}margin-left:9px;{/if}">       <div class="g_c_smvdn bd01" id="edt${parentId}"></div>      <div class="g_h_30 g_c_mvdn g_t_left g_w_100">           <div class="nEdt" style="border-bottom:none;background-color:transparent;float:left;width:27px;height:27px;"><div id="_emotionDiv_${parentId}" class="td2" style="display:none;width:27px;height:27px;"></div></div>        <div style="float:right;margin-right:-3px;position:relative;"><span class="comment-tip" id="$$_comsubmithint${parentId}" style="position:absolute;top:5px;width:100px;margin-left:20px;line-height:20px;display:none;left:64px;_left:74px;"></span><input class="g_c_button bd01 butn" id="$$_pubbtn${parentId}" onclick="${containerObjName}.addComment('${parentId}'); return false;" type="submit" {if disabled == true}disabled="true" {/if} value="发　表" {if hasCancelBtn==false}style="font-weight:700;"{/if}/>{if hasCancelBtn}&nbsp;&nbsp;<input class="g_c_button bd01 butn" id="$$_comcancelbtn${parentId}" onclick="${containerObjName}.closeComments('${parentId}');return false;" type="submit" {if disabled == true}disabled="true" {/if} value="取　消"/>{/if}&nbsp;&nbsp;</div>        <div id="validCode${parentId}" class="g_c_mvdn g_t_left g_h_25" style="float:right;display:none;margin-right:25px;"></div>      </div>     </div>    </div>   {/if}  欢迎通过百度搜索来到imlz的博客！注册登录后，你也可以拥有自己的个人博客，
还可以和博友更好的交流。 网易博客欢迎你的加入！请输入网易通行证用户名和密码登录用户名：密码：
  